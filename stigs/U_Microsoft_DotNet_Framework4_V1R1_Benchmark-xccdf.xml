<?xml version="1.0" encoding="UTF-8"?>
<Benchmark xmlns="http://checklists.nist.gov/xccdf/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cpe="http://cpe.mitre.org/language/2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" id="MS_Dot_Net_Framework" xml:lang="en" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 http://nvd.nist.gov/schema/xccdf-1.1.4.xsd http://cpe.mitre.org/dictionary/2.0 http://cpe.mitre.org/files/cpe-dictionary_2.1.xsd">
  <status date="2013-03-06">accepted</status>
  <title>Microsoft Dot Net Framework 4.0 STIG</title>
  <description>Applicable to systems and applications utilizing the Microsoft .Net version 4.0 framework.</description>
  <notice id="terms-of-use" xml:lang="en" />
  <reference href="http://iase.disa.mil">
    <dc:publisher>DISA, Field Security Operations</dc:publisher>
    <dc:source>STIG.DOD.MIL</dc:source>
  </reference>
  <plain-text id="release-info">Release: 1 Benchmark Date: 6 Mar 2013</plain-text>
  <platform idref="cpe:/a:microsoft:.net_framework:4.0" />
  <version>1</version>
  <Profile id="MAC-1_Classified">
    <title>I - Mission Critial Classified</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="V-7055" selected="true" />
    <select idref="V-7061" selected="true" />
    <select idref="V-7062" selected="true" />
    <select idref="V-7064" selected="true" />
    <select idref="V-7065" selected="true" />
    <select idref="V-7066" selected="true" />
    <select idref="V-31212" selected="true" />
    <select idref="V-31307" selected="true" />
  </Profile>
  <Profile id="MAC-1_Public">
    <title>I - Mission Critial Public</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="V-7055" selected="true" />
    <select idref="V-7061" selected="true" />
    <select idref="V-7062" selected="true" />
    <select idref="V-7064" selected="true" />
    <select idref="V-7065" selected="true" />
    <select idref="V-7066" selected="true" />
    <select idref="V-31212" selected="true" />
    <select idref="V-31307" selected="true" />
  </Profile>
  <Profile id="MAC-1_Sensitive">
    <title>I - Mission Critial Sensitive</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="V-7055" selected="true" />
    <select idref="V-7061" selected="true" />
    <select idref="V-7062" selected="true" />
    <select idref="V-7064" selected="true" />
    <select idref="V-7065" selected="true" />
    <select idref="V-7066" selected="true" />
    <select idref="V-31212" selected="true" />
    <select idref="V-31307" selected="true" />
  </Profile>
  <Profile id="MAC-2_Classified">
    <title>II - Mission Support Classified</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="V-7055" selected="true" />
    <select idref="V-7061" selected="true" />
    <select idref="V-7062" selected="true" />
    <select idref="V-7064" selected="true" />
    <select idref="V-7065" selected="true" />
    <select idref="V-7066" selected="true" />
    <select idref="V-31212" selected="true" />
    <select idref="V-31307" selected="true" />
  </Profile>
  <Profile id="MAC-2_Public">
    <title>II - Mission Support Public</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="V-7055" selected="true" />
    <select idref="V-7061" selected="true" />
    <select idref="V-7062" selected="true" />
    <select idref="V-7064" selected="true" />
    <select idref="V-7065" selected="true" />
    <select idref="V-7066" selected="true" />
    <select idref="V-31212" selected="true" />
    <select idref="V-31307" selected="true" />
  </Profile>
  <Profile id="MAC-2_Sensitive">
    <title>II - Mission Support Sensitive</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="V-7055" selected="true" />
    <select idref="V-7061" selected="true" />
    <select idref="V-7062" selected="true" />
    <select idref="V-7064" selected="true" />
    <select idref="V-7065" selected="true" />
    <select idref="V-7066" selected="true" />
    <select idref="V-31212" selected="true" />
    <select idref="V-31307" selected="true" />
  </Profile>
  <Profile id="MAC-3_Classified">
    <title>III - Administrative Classified</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="V-7055" selected="true" />
    <select idref="V-7061" selected="true" />
    <select idref="V-7062" selected="true" />
    <select idref="V-7064" selected="true" />
    <select idref="V-7065" selected="true" />
    <select idref="V-7066" selected="true" />
    <select idref="V-31212" selected="true" />
    <select idref="V-31307" selected="true" />
  </Profile>
  <Profile id="MAC-3_Public">
    <title>III - Administrative Public</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="V-7055" selected="true" />
    <select idref="V-7061" selected="true" />
    <select idref="V-7062" selected="true" />
    <select idref="V-7064" selected="true" />
    <select idref="V-7065" selected="true" />
    <select idref="V-7066" selected="true" />
    <select idref="V-31212" selected="true" />
    <select idref="V-31307" selected="true" />
  </Profile>
  <Profile id="MAC-3_Sensitive">
    <title>III - Administrative Sensitive</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="V-7055" selected="true" />
    <select idref="V-7061" selected="true" />
    <select idref="V-7062" selected="true" />
    <select idref="V-7064" selected="true" />
    <select idref="V-7065" selected="true" />
    <select idref="V-7066" selected="true" />
    <select idref="V-31212" selected="true" />
    <select idref="V-31307" selected="true" />
  </Profile>
  <Group id="V-7055">
    <title>APPNET0031 No Strong Name Verification</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="SV-7438r2_rule" severity="medium" weight="10.0">
      <version>APPNET0031</version>
      <title>Digital signatures assigned to strongly named assemblies must be verified.</title>
      <description>&lt;VulnDiscussion&gt;A strong name consists of the assembly's identity, simple text name, version number, and culture information (if provided)â€”plus a public key and a digital signature.  Strong names serve to identify the author of the code.  If digital signatures used to sign strong name assemblies are not verified, any self signed code can be impersonated.  This can lead to a loss of system integrity. &lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;System Administrator&lt;/Responsibility&gt;&lt;IAControls&gt;DCSL-1&lt;/IAControls&gt;</description>
      <reference>
        <dc:title>VMS Target Framework 4.0</dc:title>
        <dc:publisher>DISA FSO</dc:publisher>
        <dc:type>VMS Target</dc:type>
        <dc:subject>Framework 4.0</dc:subject>
        <dc:identifier>2030</dc:identifier>
      </reference>
      <fixtext fixref="F-12596r7_fix">Use regedit to remove the values stored in Windows registry key HKLM\Software\Microsoft\StrongName\Verification. There should be no assemblies or hash values listed under this registry key.

All assemblies must require strong name verification in a production environment.

Strong name assemblies that do not require verification in a development or test environment must have documented approvals from the IAO.</fixtext>
      <fix id="F-12596r7_fix" />
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref name="oval:mil.disa.fso.dotnet:def:2" href="U_Microsoft_DotNet_Framework4_V1R1_Benchmark-oval.xml" />
      </check>
    </Rule>
  </Group>
  <Group id="V-7061">
    <title>APPNET0046 Test Root certificates</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="SV-7444r2_rule" severity="medium" weight="10.0">
      <version>APPNET0046</version>
      <title>Windows systems must be configured to prevent application use of Test Root certificates.</title>
      <description>&lt;VulnDiscussion&gt;Microsoft Windows operating systems provide a feature called Authenticode. Authenticode technology and its underlying code signing mechanisms serve to provide a mechanism to identify software publishers and ensure that software applications have not been tampered with. Authenticode technology relies on digital certificates and is based on Public Key Cryptography Standards (PKCS) #7 (encrypted key specification), PKCS #10 (certificate request formats), X.509 (certificate specification), and Secure Hash Algorithm (SHA) and MD5 hash algorithms.

A root certificate is a public key certificate or self signed certificate that identifies the Root Certificate Authority.  Digital certificates are verified by using a chain of trust. The trust anchor for digital certificates is the Root Certificate Authority (CA).  A CA may generate a Test Root Certificate that is used for testing purposes.  Configuring production Windows systems to allow applications to use Test Root Certificates in order to ascertain trust can create an integrity risk.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;Systems that are compliant with this STIG requirement, may experience operational issues when attempting to run or install signed applications and device drivers that have been signed with a test root certificate.  This is due to the production system being configured to require that certificates marked as being for test purposes only are not used. 
&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;System Administrator&lt;/Responsibility&gt;&lt;IAControls&gt;DCSL-1&lt;/IAControls&gt;</description>
      <reference>
        <dc:title>VMS Target Framework 4.0</dc:title>
        <dc:publisher>DISA FSO</dc:publisher>
        <dc:type>VMS Target</dc:type>
        <dc:subject>Framework 4.0</dc:subject>
        <dc:identifier>2030</dc:identifier>
      </reference>
      <fixtext fixref="F-12602r10_fix">Using regedit, change the hexadecimal value of the "HKEY_USER\[UNIQUE USER SID VALUE]\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing\State" registry key. 

For production systems, change the hexadecimal value in nibble position 2 to "0". 

For development systems, change the hexadecimal value in nibble position 2 to "0" or the IAO must approve the 
settings. 

Example fix:
Hex value:       100a0
Nibble position: 54321

To apply fix, example hex value "a" in nibble position 2 would be changed to hex value "0" resulting in a hex value of 10000.</fixtext>
      <fix id="F-12602r10_fix" />
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref name="oval:mil.disa.fso.dotnet:def:3" href="U_Microsoft_DotNet_Framework4_V1R1_Benchmark-oval.xml" />
      </check>
    </Rule>
  </Group>
  <Group id="V-7062">
    <title>APPNET0047 Application Expired Certificates</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="SV-7445r2_rule" severity="medium" weight="10.0">
      <version>APPNET0047</version>
      <title>Windows must check for expired application certificates</title>
      <description>&lt;VulnDiscussion&gt;Microsoft Windows operating systems provide a feature called Authenticode. Authenticode technology and its underlying code signing mechanisms serve to provide a mechanism to identify software publishers and ensure that software applications have not been tampered with. Authenticode technology relies on digital certificates and is based on Public Key Cryptography Standards (PKCS) #7 (encrypted key specification), PKCS #10 (certificate request formats), X.509 (certificate specification), and Secure Hash Algorithm (SHA) and MD5 hash algorithms.

.Net application developers sign their application code with their public key and Authenticode technology performs certificate validation tasks prior to allowing the application to run. If the system is not configured properly, Authenticode will not check for expired certificates creating an integrity risk which could result in malware running on the system.
&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;APPNET0047_MIT&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;Systems that are compliant with this STIG requirement and have restricted or no network access, may experience operational issues when attempting to run or install signed applications or drivers.  This is due to the system being configured to require certificate validation prior to running the application, yet not having the means to communicate with the CA in order to validate the certificate.  &lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;To address this issue, the DAA may accept the risk of reconfiguring the system back to factory default settings (23c00) for the time required to install the signed application.   

To mitigate the risk of not automatically validating the certificate when installing on an isolated network or system, the installer must manually validate the certificate of the signed application prior to installation.  

One way this can be accomplished is by using the Signtool.exe utility found in the Windows SDK. Signtool.exe provides the capability to manually validate the application signing certificate. See usage documentation for instructions on use.  

Another validation method is to install the application on a .NET STIG compliant system in a test environment that provides an available network path to the signing CA, then ensuring and documenting that no certificate notifications or issues were encountered.
&lt;/MitigationControl&gt;&lt;Responsibility&gt;System Administrator&lt;/Responsibility&gt;&lt;IAControls&gt;DCSL-1&lt;/IAControls&gt;</description>
      <reference>
        <dc:title>VMS Target Framework 4.0</dc:title>
        <dc:publisher>DISA FSO</dc:publisher>
        <dc:type>VMS Target</dc:type>
        <dc:subject>Framework 4.0</dc:subject>
        <dc:identifier>2030</dc:identifier>
      </reference>
      <fixtext fixref="F-12603r8_fix">Using regedit, verify the hexadecimal value of the "HKEY_USER\[UNIQUE USER SID VALUE]\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing\State" registry key. 

For production systems, change the hexadecimal value in nibble position 3 to "0". 

For development systems, change the hexadecimal value in nibble position 3 to "0" or the IAO must provide documented approval. 

Example fix:
Hex value:       10c00
Nibble position: 54321
To apply fix, example hex value "c" in nibble position 3 would be changed to hex value "0" resulting in a hex value of 10000.</fixtext>
      <fix id="F-12603r8_fix" />
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref name="oval:mil.disa.fso.dotnet:def:4" href="U_Microsoft_DotNet_Framework4_V1R1_Benchmark-oval.xml" />
      </check>
    </Rule>
  </Group>
  <Group id="V-7064">
    <title>APPNET0049 Windows Revoked Certificates</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="SV-41559r1_rule" severity="medium" weight="10.0">
      <version>APPNET0049</version>
      <title>Windows must be configured to check for revoked application certificates.</title>
      <description>&lt;VulnDiscussion&gt;Microsoft Windows operating systems provide a feature called Authenticode. Authenticode technology and its underlying code signing mechanisms serve to provide a mechanism to identify software publishers and ensure that software applications have not been tampered with. Authenticode technology relies on digital certificates and is based on Public Key Cryptography Standards (PKCS) #7 (encrypted key specification), PKCS #10 (certificate request formats), X.509 (certificate specification), and Secure Hash Algorithm (SHA) and MD5 hash algorithms.

.Net application developers sign their application code with their public key and Authenticode technology performs certificate validation tasks prior to allowing the application to run. If the system is not configured properly, Authenticode will not check for revoked certificates creating an integrity risk that could result in malware being run on the system.
&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;APPNET0049_MIT&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;Systems that are compliant with this STIG requirement and have restricted or no network access, may experience operational issues when attempting to run or install signed applications.  This is due to the system being configured to require certificate validation checks prior to running the application, yet not having the means to communicate with the CA in order to validate the certificate.  &lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;To address this issue, the DAA may accept the risk of reconfiguring the system back to factory default settings (23c00) for the time required to install the signed application.   

To mitigate the risk of not automatically validating the certificate when installing on an isolated network or system, the installer must manually validate the certificate of the signed application prior to installation.  

One way this can be accomplished is by using the Signtool.exe utility found in the Windows SDK. Signtool.exe provides the capability to manually validate the application signing certificate. See usage documentation for instructions on use.  

Another validation method is to install the application on a .NET STIG compliant system in a test environment that provides an available network path to the signing CA, then ensuring and documenting that no certificate notifications or issues were encountered.
&lt;/MitigationControl&gt;&lt;Responsibility&gt;System Administrator&lt;/Responsibility&gt;&lt;IAControls&gt;DCSL-1&lt;/IAControls&gt;</description>
      <reference>
        <dc:title>VMS Target Framework 4.0</dc:title>
        <dc:publisher>DISA FSO</dc:publisher>
        <dc:type>VMS Target</dc:type>
        <dc:subject>Framework 4.0</dc:subject>
        <dc:identifier>2030</dc:identifier>
      </reference>
      <fixtext fixref="F-35213r9_fix">Using regedit, change the hexadecimal value of the "HKEY_USER\[UNIQUE USER SID VALUE]\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing\State" registry key. 

For production systems, change the hexadecimal values for nibble position 3 to "0". 

For development systems, change the hexadecimal values for nibble position 3 to "0" or the IAO must provide documented approval. 

Example fix:
Hex value:       10f00
Nibble position: 54321
To apply fix, the example hex value "f" in nibble position 3 would be changed to hex value "0" resulting in a hex value of 10000.</fixtext>
      <fix id="F-35213r9_fix" />
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref name="oval:mil.disa.fso.dotnet:def:5" href="U_Microsoft_DotNet_Framework4_V1R1_Benchmark-oval.xml" />
      </check>
    </Rule>
  </Group>
  <Group id="V-7065">
    <title>APPNET0050 Unknown Certificate Status</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="SV-7448r2_rule" severity="medium" weight="10.0">
      <version>APPNET0050</version>
      <title>Windows must be configured to block application execution if certificate server status is unavailable.</title>
      <description>&lt;VulnDiscussion&gt;Microsoft Windows operating systems provide a feature called Authenticode. Authenticode technology and its underlying code signing mechanisms serve to provide a mechanism to identify software publishers and ensure that software applications have not been tampered with. Authenticode technology relies on digital certificates and is based on Public Key Cryptography Standards (PKCS) #7 (encrypted key specification), PKCS #10 (certificate request formats), X.509 (certificate specification), and Secure Hash Algorithm (SHA) and MD5 hash algorithms.

.Net application developers sign their application code with their public key and Authenticode technology performs certificate validation tasks prior to allowing the application to run. Certificate validation tests include certificate revocation checks to determine if the certificate has been revoked by the certificate authority. In order for Authenticode to test the certificate for revocation, the authoritative revocation server must be available. If the revocation server is not available, the certificate status is unknown and the software must be prevented from running until the certificate can be validated. 

By default, Windows will allow application software to run if the certificate revocation server is offline and not available. This creates an integrity risk of malware being introduced into the system.
&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;APPNET0050_MIT&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;Systems that are compliant with this STIG requirement and have restricted or no network access, may experience operational issues when attempting to run or install signed applications or drivers.  This is due to the system being configured to require certificate server status validation prior to running the application, yet not having the means to communicate with the CA in order to validate the certificate.  &lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;To address this issue, the DAA may accept the risk of reconfiguring the system back to factory default settings (23c00) for the time required to install the signed application. 

To mitigate the risk of not automatically validating the certificate server availability status when installing on an isolated network or system, the installer must manually validate certificate server availability prior to application installation.

One way this can be accomplished is by using the Signtool.exe utility found in the Windows SDK. Signtool.exe provides the capability to manually validate the application signing certificate. See usage documentation for instructions on use.  

Another validation method is to install the application on a .NET STIG compliant system in a test environment that provides an available network path to the signing CA server, then ensuring and documenting that no certificate notifications or issues were encountered.
&lt;/MitigationControl&gt;&lt;Responsibility&gt;System Administrator&lt;/Responsibility&gt;&lt;IAControls&gt;DCSL-1&lt;/IAControls&gt;</description>
      <reference>
        <dc:title>VMS Target Framework 4.0</dc:title>
        <dc:publisher>DISA FSO</dc:publisher>
        <dc:type>VMS Target</dc:type>
        <dc:subject>Framework 4.0</dc:subject>
        <dc:identifier>2030</dc:identifier>
      </reference>
      <fixtext fixref="F-35216r8_fix">Using regedit, change the hexadecimal value of the "HKEY_USER\[UNIQUE USER SID VALUE]\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing\State" registry key. 

For production systems, change the hexadecimal values for nibble positions 3 and 4 to "0". 

For development systems, change the hexadecimal values for nibble positions 3 and 4 to "0" or the IAO must provide documented approval.

Example fix:
Hex value:       1da00
Nibble position: 54321

To apply fix, example hex value "a" in nibble position "3" and hex value "d" in nibble position 4 would both be changed to hex value "0" resulting in a final hex value of 10000.</fixtext>
      <fix id="F-35216r8_fix" />
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref name="oval:mil.disa.fso.dotnet:def:6" href="U_Microsoft_DotNet_Framework4_V1R1_Benchmark-oval.xml" />
      </check>
    </Rule>
  </Group>
  <Group id="V-7066">
    <title>APPNET0051 Time Stamp Certificate Revocation</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="SV-7449r3_rule" severity="medium" weight="10.0">
      <version>APPNET0051</version>
      <title>Windows must be configured to check the time stamp servers certificate for revocation.</title>
      <description>&lt;VulnDiscussion&gt;Microsoft Windows operating systems provide a feature called Authenticode. Authenticode technology and its underlying code signing mechanisms serve to provide a mechanism to identify software publishers and ensure that software applications have not been tampered with. Authenticode technology relies on digital certificates and is based on Public Key Cryptography Standards (PKCS) #7 (encrypted key specification), PKCS #10 (certificate request formats), X.509 (certificate specification), and Secure Hash Algorithm (SHA) and MD5 hash algorithms.

.Net application developers sign their application code with their public key and Authenticode technology performs certificate validation tasks prior to allowing the application to run.  As part of the overall signing process, a trusted time stamp server also digitally signs the assembly.  The time stamp server's signature confirms the developer's certificate was valid at the time the developer signed the assembly.

If the system is not configured properly, Authenticode will not check for revocation of the time stamp serverâ€™s certificate.  Not checking for certificate revocation creates a risk that could lead to a loss of system integrity.
&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;APPNET0051_MIT&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;Systems that are compliant with this STIG requirement and have restricted or no network access, may experience operational issues when attempting to run or install signed applications or drivers.  This is due to the system being configured to require certificate validation prior to running the application, yet not having the means to communicate with the CA in order to validate the certificate.  
&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;To address this issue, the DAA may accept the risk of reconfiguring the system back to factory default settings (23c00) for the time required to install the signed application.   

To mitigate the risk of not automatically validating the time stamp certificate when installing on an isolated network or system, the installer must manually validate the certificate of the signed application prior to installation.  

One way this can be accomplished is by using the Signtool.exe utility found in the Windows SDK. Signtool.exe provides the capability to manually validate the application signing certificate. See usage documentation for instructions on use.  

Another validation method is to install the application on a .NET STIG compliant system in a test environment that provides an available network path to the signing CA, then ensuring and documenting that no certificate notifications or issues were encountered.&lt;/MitigationControl&gt;&lt;Responsibility&gt;System Administrator&lt;/Responsibility&gt;&lt;IAControls&gt;DCSL-1&lt;/IAControls&gt;</description>
      <reference>
        <dc:title>VMS Target Framework 4.0</dc:title>
        <dc:publisher>DISA FSO</dc:publisher>
        <dc:type>VMS Target</dc:type>
        <dc:subject>Framework 4.0</dc:subject>
        <dc:identifier>2030</dc:identifier>
      </reference>
      <fixtext fixref="F-12607r12_fix">Using regedit, change the hexadecimal value of the "HKEY_USER\[UNIQUE USER SID VALUE]\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing\State" registry key. 

For production systems, change the hexadecimal value for nibble position 5 to "1". 

For development systems, change the hexadecimal value for nibble position 5 to "1" or the IAO must provide documented approval. 

Example fix:
Hex value:       d0000
Nibble position: 54321
To apply fix, the example hex value "d" in nibble position 5 would be changed to a hex value of "1" resulting in a hex value of 10000.</fixtext>
      <fix id="F-12607r12_fix" />
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref name="oval:mil.disa.fso.dotnet:def:7" href="U_Microsoft_DotNet_Framework4_V1R1_Benchmark-oval.xml" />
      </check>
    </Rule>
  </Group>
  <Group id="V-31212">
    <title>APPNET0068 Invalidate Version 1 Signed Objects</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="SV-41412r1_rule" severity="medium" weight="10.0">
      <version>APPNET0068</version>
      <title>Windows must be configured to invalidate PKCS #7 version 1 signed objects</title>
      <description>&lt;VulnDiscussion&gt;Microsoft Windows operating systems provide a feature called Authenticode.  Authenticode technology and its underlying code signing mechanisms serve to provide a mechanism to identify software publishers and ensure that software applications have not been tampered with.  Authenticode technology relies on digital certificates and is based on Public Key Cryptography Standards (PKCS) #7 (encrypted key specification), PKCS #10 (certificate request formats), X.509 (certificate specification), and Secure Hash Algorithm (SHA) and MD5 hash algorithms.

.Net application developers sign their application code with their public key and Authenticode technology performs certificate validation tasks prior to allowing the application to run.  If the system is not configured properly, Authenticode will not invalidate older PKCS #7 version 1 signed objects creating a risk which could affect the integrity of the system.
&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;System Administrator&lt;/Responsibility&gt;&lt;IAControls&gt;DCSL-1&lt;/IAControls&gt;</description>
      <reference>
        <dc:title>VMS Target Framework 4.0</dc:title>
        <dc:publisher>DISA FSO</dc:publisher>
        <dc:type>VMS Target</dc:type>
        <dc:subject>Framework 4.0</dc:subject>
        <dc:identifier>2030</dc:identifier>
      </reference>
      <fixtext fixref="F-35123r8_fix">Using regedit, change the hexadecimal value of the "HKEY_USER\[UNIQUE USER SID VALUE]\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing\State" registry key. 

For production systems, change the hexadecimal value for nibble position 5 to "1".  

For development systems, change the hexadecimal value for nibble position 5 to "1" or the IAO must provide documented approval.

Example fix:
Hex value:         f0000
Nibble position:   54321
To apply fix, the example hex value "f" in nibble position 5 would be changed to "1" resulting in a hex value of 10000.</fixtext>
      <fix id="F-35123r8_fix" />
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref name="oval:mil.disa.fso.dotnet:def:13" href="U_Microsoft_DotNet_Framework4_V1R1_Benchmark-oval.xml" />
      </check>
    </Rule>
  </Group>
  <Group id="V-31307">
    <title>APPNET0069 Items in Trust Database</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="SV-41581r1_rule" severity="medium" weight="10.0">
      <version>APPNET0069</version>
      <title>Software publishing state table must be configured to only trust items in the users trust database.</title>
      <description>&lt;VulnDiscussion&gt;Microsoft Windows operating systems provide a feature called Authenticode.  Authenticode technology and its underlying code signing mechanisms serve to provide a mechanism to identify software publishers and ensure that software applications have not been tampered with.  Authenticode technology relies on digital certificates and is based on Public Key Cryptography Standards (PKCS) #7 (encrypted key specification), PKCS #10 (certificate request formats), X.509 (certificate specification), and Secure Hash Algorithm (SHA) and MD5 hash algorithms.

.Net application developers sign their application code with their public key and Authenticode technology performs certificate validation tasks prior to allowing the application to run.  If the system is not configured properly, Authenticode will allow only downloads from publishers that are contained in users personal trust database creating an availability risk.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;System Administrator&lt;/Responsibility&gt;&lt;IAControls&gt;DCSL-1&lt;/IAControls&gt;</description>
      <reference>
        <dc:title>VMS Target Framework 4.0</dc:title>
        <dc:publisher>DISA FSO</dc:publisher>
        <dc:type>VMS Target</dc:type>
        <dc:subject>Framework 4.0</dc:subject>
        <dc:identifier>2030</dc:identifier>
      </reference>
      <fixtext fixref="F-35237r6_fix">Using regedit, change the hexadecimal value of the "HKEY_USER\[UNIQUE USER SID VALUE]\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing\State" registry key. 

For production systems, change the hexadecimal value for nibble position 5 to "1". 

For development systems, change the hexadecimal values for nibble position 5 to "1" or the IAO must provide documented approval. 

Example fix:
Hex value:       c0000
Nibble position: 54321
To apply fix, the example hex value "c" in nibble position 5 would be changed to hex value "1" resulting in a hex value of 10000.</fixtext>
      <fix id="F-35237r6_fix" />
      <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <check-content-ref name="oval:mil.disa.fso.dotnet:def:14" href="U_Microsoft_DotNet_Framework4_V1R1_Benchmark-oval.xml" />
      </check>
    </Rule>
  </Group>
</Benchmark>

